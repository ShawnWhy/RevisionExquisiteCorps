{"version":3,"sources":["logo.svg","components/Chat/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Chat","socket","openSocket","autoConnect","transports","chatwindowRef","useRef","useState","interior","setInterior","curtain","setCurtain","userName","setUserName","turn","setTurn","tempUsername","setTempUsername","sentence","SetSentence","currentdisplay","setCurrentDisplay","users","setUsers","message","setMessage","messages","setMessages","allsentences","setAllsentences","rules","setRules","chat","setChat","roomSelect","setRoomSelect","dolls","setDolls","rotateHead","setRotateHead","maskFall","setMaskFall","maskFly","setMaskFly","currentPlayer","setCurrentPlayer","initialInstruction","setInitialInstruction","useEffect","length","connect","on","emit","room","current","scrollTop","scrollHeight","user","info","sentences","opencurtain","setTimeout","console","log","text","player","tail","id","filter","handleMessageOut","event","preventDefault","stopPropagation","newMessage","username","open","andreb","classNames","rene","pablo","benjamin","leonora","max","andre","marcel","hostGhost","rooms","1","2","3","4","5","6","7","8","nameTag","setNameTag","nameTagTwo","setNameTagTwo","previousDoll","setPreviousDoll","submitRoom","target","displayNameTag","nameId","hideNameTag","sentCurrentPlayer","createEndDisplay","sentenceArray","split","slice","Length","join","className","onClick","type","onChange","e","value","onMouseOver","onMouseLeave","placeholder","href","download","ref","map","index","date","key","currentTarget","name","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.05753528.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/* eslint-disable no-lone-blocks */\nimport React, { useEffect, useState, useRef } from \"react\";\n// import API from \"../../utils/API\";\nimport Style from \"./chat.css\"\n// import Moment from \"react-moment\";\nimport reactDOM from \"react-dom\";\nimport moment from \"moment\";\nimport io from \"socket.io-client\";\n// import { set } from \"mongoose\";\nimport classNames from \"classnames\";\nimport openSocket from 'socket.io-client';\n\n\n\nfunction Chat(){\n\n \n\n//   const socket = io(\"http://localhost:3001\", {autoConnect:false,\n//   transports: [\"websocket\", \"polling\"]\n// });\nconst socket = openSocket (\"wss://revisionexquisite.herokuapp.com/\",{autoConnect:false,\n\n     transports:[\"websocket\",\"polling\"]\n});\n\n//referenced mchatwindow\nconst chatwindowRef = useRef();\n//turn interior stuffs on \n  const [interior, setInterior]= useState(\"off\")\n//turn curtains on and off\n  const [curtain, setCurtain] = useState (\"off\")\n //username\n  const [userName, setUserName] = useState(\"\");\n//set if it's teh client's turn to play\n  const [turn, setTurn] = useState(\"on\")\n//variable used to test and set username\n  const [tempUsername, setTempUsername] = useState (\"\");\n//is username is of the surrealists, then they cannot use it \n//this is the sentence used to pass on and play the game\n  const [sentence, SetSentence] = useState(\"\")\n//this is used to display the first sentence  \n  const [currentdisplay, setCurrentDisplay]=useState(\"Write your first sentence please\")\n//the list of users\n  const [users, setUsers] = useState([\n    ]);\n//if the user wants to communicate\n    const [message, setMessage] = useState(\"\");\n//all the messages goto the message window\n    const [messages, setMessages] = useState([]);\n// this is the repository of all of the written sentences during the game\n  const [allsentences, setAllsentences]=useState([])\n//this controls the final poem modal\n  const [poemModal, setPoemModal]=useState(\"off\")\n//this controls the modal for the rules\n const [rules, setRules]=useState(\"off\")\n //chatwindow\n const [chat, setChat]=useState(\"off\")\n\n// this happens automatically and changes when the \n//username changes\nconst [roomSelect, setRoomSelect]= useState(\"\");\n\nconst[dolls, setDolls]=useState(\"\")\n//rotate head animation\nconst[rotateHead,setRotateHead]=useState(\"off\")\n//fall animation\nconst [maskFall, setMaskFall]=useState(\"off\");\nconst [maskFly, setMaskFly]=useState(\"off\");\n// display the name of the current player\nconst [currentPlayer, setCurrentPlayer]=useState(\"\")\n//   var chatWindow = reactDOM.\nconst [initialInstruction, setInitialInstruction]=useState(\"Welcome dear visitor, what would you like to be called?\")\n\n// },[])\nuseEffect(()=>{\n  if(curtain===\"off\")\n  {\n    setDolls(\"on\");\n  } \n},[])\nuseEffect(()=>{\n  if(tempUsername.length>0){\n    setInitialInstruction(\"please also Select a spirit guide\")\n  }\n  if(tempUsername.length===0){\n    setInitialInstruction(\"Welcome dear visitor,what would you like to be called?\")\n  }\n\n},[tempUsername])\n\n  useEffect(() => {\n\n\n    if(userName.length>0){\n    socket.connect();\n    socket.on(\"connect\", function () {\n      // console.log(\"clientsideworks\")\n      socket.emit(\"username\", {userName:userName,\n      room:roomSelect\n      }\n      );\n    });}\n    //set all the users in the chatroom \n    socket.on(\"users\", (users) => {\n      setUsers( users);\n    });\n    //when receiving messages\n    socket.on(\"message\", (message) => {\n      // console.log(message);\n      // var id = message.id\n      // console.log(users[id])\n      //push the message into the messages array\n      setMessages((messages) => [...messages, message]);\n      // console.log(chatwindowRef.current.scrollTop);\n      chatwindowRef.current.scrollTop = chatwindowRef.current.scrollHeight;\n      // console.log(chatwindowRef.current.scrollHeight);\n      // console.log(chatwindowRef.current.scrollTop)\n\n      \n    });\n    // as other players connect to the server, the player's name is pushed into the list of players\n    socket.on(\"connected\", (user) => {\n      setUsers((users) => [...users, user]);\n    });\n\n    socket.on(\"start\",info=>{\n      setAllsentences((allsentences) => [...allsentences, ...info.sentences])\n        setCurrentPlayer(info.currentPlayer)\n        opencurtain();\n      if (info.currentPlayer===userName){\n        setTurn(\"on\")\n\n      }\n      else{setTurn(\"off\")\n      setCurrentDisplay(\"\")}\n      })\n    \n      socket.on(\"rejected\",()=>{\n        setInitialInstruction(\"user name already Taken, sorry\")\n        setTimeout(() => {\n          setInitialInstruction(\"Welcome dear visitor,what would you like to be called?\")\n          \n        },1000);\n      })\n\n    socket.on(\"sentenceBroadcast\", (sentence)=>{\n      console.log(\"newsentence\")\n      console.log(sentence.text);\n      console.log(sentence.player)\n      setCurrentDisplay(sentence.tail);\n      setCurrentPlayer(sentence.player);\n      setAllsentences((allsentences) => [...allsentences, sentence.text\n      ])\n      if (sentence.player===userName){\n        setTurn(\"on\")\n      }\n      else{setTurn(\"off\")}\n    });\n    \n    //on another player's disconnect, the cient gets the emit, and rids the player\n    //from the list\n    socket.on(\"disconnected\", id => {\n      setUsers((users) => {\n        return users.filter((user) => user.id!==id);\n      });\n    });\n  }\n  , [userName]);\n\n//on the exterior, sets the username for this session\n const handleNameInputChange = function(e){\n   e.preventDefault();\n   e.stopPropagation();\n   setTempUsername(e.target.value);\n   \n }\n//opens the curtian and begins the game\n const opencurtain = () =>{\n   //the player cannot choose any of the surrelists' names\n  if(tempUsername===\"Leonora\"||tempUsername===\"Max\"||tempUsername===\"Marcel\"||tempUsername===\"Andre\"||tempUsername===\"Rene\"||tempUsername===\"Pablo\"||tempUsername===\"Benjamin\" ) {\n  //if so, the thing warns you and then turns off right after\n   setInitialInstruction(\"sorry \"+tempUsername+\" is already playing\")\n  \n  }\n  else if (!roomSelect){\n    setInitialInstruction(\"please click on a spirit guide to choose her/him\")\n  }\n  //if the thing has any thing init, the curtain is turned on\n  else if(tempUsername.length>0&&roomSelect.length>0){\n    setDolls(\"off\");\n    setCurtain(\"on\")\n    setMaskFall(\"on\")\n    setTimeout(() => {\n      setMaskFall(\"off\")\n        }, 2000);\n\n  //turns on and connects to socket.io after two seconds\n    setTimeout(() => {\n      setInterior(\"on\")\n      }, 2000);\n    }\n  }\n\n  //opens the curtian and begins the game\n const submitName = () =>{\n  //the player cannot choose any of the surrelists' names\n if(tempUsername===\"Leonora\"||tempUsername===\"Max\"||tempUsername===\"Marcel\"||tempUsername===\"Andre\"||tempUsername===\"Rene\"||tempUsername===\"Pablo\"||tempUsername===\"Benjamin\" ) {\n //if so, the thing warns you and then turns off right after\n  setInitialInstruction(\"sorry \"+tempUsername+\" is already playing\")\n \n }\n else if (!roomSelect){\n   setInitialInstruction(\"please click on a spirit guide to choose her/him\")\n }\n else if(tempUsername.length>0&&roomSelect.length>0){\n  setUserName(tempUsername)\n\n\n }\n\n }\n\n  //emits the messageout\n  const handleMessageOut = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    var newMessage = {\n      message: message,\n      username: userName,\n      room:roomSelect\n    };\n    // console.log(\"messageout\")\n    // console.log(newMessage)\n    socket.open();\n    socket.emit(\"send\", newMessage);\n    //then set the message variable to blank\n    setMessage(\"\");\n  };\n\n  //the ghost of surrelists past will speak to you\n  const handleMessagetoGhostOut = (event)=>{\n    event.preventDefault();\n    event.stopPropagation();\n    setMaskFly(\"on\")\n\n    socket.open();\n    setTimeout(() => {\n      setMaskFly(\"off\")\n      }, 1000);\n\n    var newMessage = {\n      message: message,\n      username: userName,\n      room:roomSelect\n      };\n      // console.log(\"ghostmessagesent\")\n      // console.log(newMessage)\n      socket.emit(\"sendToGhost\", newMessage);\n      //then set the message variable to blank\n      setMessage(\"\");\n    };\n\n  \n\n  //takes the value from the sentence input and sets it as a variable ready to emit\n  const TypeSentence = (e)=>{\n    e.preventDefault();\n    e.stopPropagation();\n    SetSentence(e.target.value);\n  }\n\n  //emits the sentence\n  const submitSentence = ()=>{\n    setRotateHead(\"on\")\n    let tail = createEndDisplay(sentence)\n    console.log(tail);\n\n    socket.open();\n\n    socket.emit(\"sentence\",{\n      sentence:sentence,\n      room:roomSelect,\n      tail:tail}\n       )\n    setTimeout(() => {\n      setRotateHead(\"off\")\n      \n    }, 2000);\n  }\n  //opens the modal for the entire poem\n  // const openPoem = () =>{\n  //   setPoemModal(\"on\")\n  // }\n  // const closePoem = () =>{\n  //   setPoemModal(\"off\")\n  // }\n  //opens the modal for the rules modal\n  const openRules = ()=>{\n    setRules(\"on\")\n  }\n  const closeRules=()=>{\n    setRules(\"off\")\n  }\n\n  const openChat =()=>{\n    setChat(\"on\")\n  }\n  const closeChat =()=>{\n    setChat(\"off\")\n  }\n\n// sets the appearance of the dolls as they are \n//wither selected or not\n\n  const andreb = classNames(\"invisible\",\n  {\n    \"andreb\":dolls===\"on\",\n    \"andrebSelected\":roomSelect===\"1\"\n  });\n  const rene = classNames(\"invisible\",\n  {\n    \"rene\": dolls ===\"on\",\n    \"reneSelected\": roomSelect===\"2\"\n  })\n  const pablo = classNames(\"invisible\",\n{\n    \"pablo\":dolls===\"on\",\n    \"pabloSelected\":roomSelect===\"3\"\n  });\n  const benjamin = classNames(\"invisible\",\n  {\n    \"benjamin\":dolls===\"on\",\n    \"benjaminSelected\":roomSelect===\"4\"\n  });\n  const leonora = classNames(\"invisible\",\n  {\n    \"leonora\":dolls===\"on\",\n    \"leonoraSelected\":roomSelect===\"5\"\n  });\n  const max = classNames(\"invisible\",\n  {\n    \"max\":dolls===\"on\",\n    \"maxSelected\":roomSelect===\"6\"\n  });\n  const andre = classNames(\"invisible\",\n  {\n    \"andre\":dolls===\"on\",\n    \"andreSelected\":roomSelect===\"7\"\n  });\n  const marcel=classNames(\"invisible\",\n  {\"marcel\":dolls===\"on\",\n    \"marcelSelected\":roomSelect===\"8\"}\n\n  )\n\n// className settings for the host head in the gaming room \nconst hostGhost = classNames(\n  {\"ghostHeadAndreB\":roomSelect===\"1\",\n  \"andreBFall\":roomSelect===\"1\"&&maskFall===\"on\",\n\n  \"ghostHeadRene\":roomSelect===\"2\",\n  \"reneFall\":roomSelect===\"2\"&&maskFall===\"on\",\n\n  \"ghostHeadPablo\":roomSelect===\"3\",\n  \"pabloFall\":roomSelect===\"3\"&&maskFall===\"on\",\n\n  \"ghostHeadBenjamin\":roomSelect===\"4\",\n  \"benjaminFall\":roomSelect===\"4\"&&maskFall===\"on\",\n\n  \"ghostHeadLeonora\":roomSelect===\"5\",\n  \"leonoraFall\":roomSelect===\"5\"&&maskFall===\"on\",\n\n  \"ghostHeadMax\":roomSelect===\"6\",\n  \"maxFall\":roomSelect===\"6\"&&maskFall===\"on\",\n\n  \"ghostHeadAndre\":roomSelect===\"7\",\n  \"andreFall\":roomSelect===\"7\"&&maskFall===\"on\",\n\n  \"ghostHeadMarcel\":roomSelect===\"8\",\n  \"marcelFall\":roomSelect===\"8\"&&maskFall===\"on\"},\n\n  {\"rotateHead\":rotateHead===\"on\"},\n  {\"flyAway\":maskFly===\"on\"}\n\n)\n\n// the room numbers\nconst rooms=[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"];\n//the name tag setting that displays the name tag on mouse over\nconst [nameTag, setNameTag]=useState({\n  1:\"off\",\n  2:\"off\",\n  3:\"off\",\n  4:\"off\",\n  5:\"off\",\n  6:\"off\",\n  7:\"off\",\n  8:\"off\",\n})\n//the name tag setting that displays when the doll is clicked on \nconst [nameTagTwo, setNameTagTwo]=useState({\n  1:\"off\",\n  2:\"off\",\n  3:\"off\",\n  4:\"off\",\n  5:\"off\",\n  6:\"off\",\n  7:\"off\",\n  8:\"off\",\n})\nconst [previousDoll,setPreviousDoll]=useState(\"\")\n\n//selects the guid as well as he room\nconst submitRoom = (event)=>{\n  event.stopPropagation();\n  event.preventDefault();\n  console.log(event.target.id)\n  var room =event.target.id;\n  setRoomSelect(room)\n  setNameTagTwo({[room]:\"on\"})\n  console.log(nameTagTwo);\n  if(previousDoll.length>0){\n    setNameTag({...nameTag,[previousDoll]:\"off\"})\n    console.log(\"nametag \")\n    console.log(nameTag)\n  }\n  setPreviousDoll(room)\n  console.log(\"previousedoll\")\n console.log(previousDoll)\n }\n\n // the name tag is displayed after user moves the curser over the figure\nconst displayNameTag=(event)=>{\n  event.stopPropagation();\n  event.preventDefault();\n  var nameId = event.target.id;\n  setNameTag({...nameTag,[nameId]:\"on\"})\n}\n//the name tag of the guides is hidden after user moves curser away\nconst hideNameTag=(event)=>{\n  event.stopPropagation();\n  event.preventDefault();\n  var nameId = event.target.id;\n  if(nameTagTwo[nameId]!==\"on\"){\n  setNameTag({...nameTag,[nameId]:\"off\"})\n}\n}\n\nconst nextPlayer = (event)=>{\n  event.preventDefault();\n  event.stopPropagation();\n  socket.open();\n  socket.emit(\"nextPlayer\",roomSelect)\n    \n}\nsocket.on(\"nextPlayer\",sentCurrentPlayer=>{\n  console.log(sentCurrentPlayer)\n  console.log(currentPlayer)\n  setCurrentPlayer(sentCurrentPlayer);\n  console.log(\"player and current player\")\n  console.log(currentPlayer)\n  console.log(userName)\n  if(sentCurrentPlayer===userName){\n    setTurn(\"on\")\n    console.log(\"turnedon\")\n  }\n  else{\n    setTurn(\"off\")\n    console.log(\"turnedoff\")\n  }\n\n})\n\n//displays the current player at the top of the main display \n// const currentPlayerDisplay = classNames({\n//   \"invisible\":interior!==\"on\"\n// })\n\n//creates the 5 or less last words of the sentence typed\nconst createEndDisplay =(sentence)=>{\n  // console.log(segment)\n  // console.log('setend')\n   var sentenceArray = sentence.split(\" \")\n  //  console.log(segmentArray)\n   if(sentenceArray.length>5){\n   sentenceArray=sentenceArray.slice(sentenceArray.length - 5, sentenceArray.Length)\n  //  console.log(segmentArray)\n  }\n  \n\n   var segmentString = sentenceArray.join(\" \");\n   return segmentString\n  }\n\n \nreturn (\n//everything\n<div className=\"allContainer\">\n<div className={\"rules \"+(rules ===\"on\"? \"\":\"invisible\")}>\n      <div className={\"rulesContent \"+(rules ===\"on\"? \"visible\":\"invisible\")}>\n        <div className=\"closeRules\" onClick={closeRules}>X</div>\n        <p>How to play: </p>\n        <p>When this game is played in person, each author writes a sentence \n        <br />(or a few sentences) on a piece of paper, then folds the paper so\n        <br /> that all or some part of what they wrote is obscurred. The next author\n        <br />then contributes to the story using only the part of the sentence that is visible below the fold.\n        </p>\n\n    </div>\n  </div>\n  <div className={dolls===\"on\"?\"dollsBackDrop\":\"invisible\"}></div>\n      {/* name input section */}\n      <div className={\"nameInputDiv \"+(curtain===\"on\"? \" invisible\":\"\")}>\n        <div className=\"nameQuestion\">\n          {initialInstruction}\n          </div>\n          {/* input it self */}\n          <input className=\"nameinput\" type=\"text\" onChange={handleNameInputChange}></input>\n          <input type=\"submit\" onClick = {submitName}></input>\n          {/* the warning div */}\n\n    </div>\n<div id ={rooms[0]} className={andreb} onClick={submitRoom} onMouseOver={displayNameTag} onMouseLeave={hideNameTag}><p className={\"nameTag \"+(nameTag[1]===\"on\"?\"\":\"invisible\")}>Andre B</p></div>\n  <div id ={rooms[1]} className={rene} onClick={submitRoom} onMouseOver={displayNameTag} onMouseLeave={hideNameTag}><p className={\"nameTag \"+(nameTag[2]===\"on\"?\"\":\"invisible\")}>Rene</p></div>\n  <div id ={rooms[2]} className={pablo} onClick={submitRoom} onMouseOver={displayNameTag} onMouseLeave={hideNameTag}><p className={\"nameTag \"+(nameTag[3]===\"on\"?\"\":\"invisible\")}>Pablo</p></div>\n  <div id ={rooms[3]} className={benjamin} onClick={submitRoom} onMouseOver={displayNameTag} onMouseLeave={hideNameTag}><p className={\"nameTag \"+(nameTag[4]===\"on\"?\"\":\"invisible\")}>Benjamin</p></div>\n  <div id ={rooms[4]} className={leonora} onClick={submitRoom} onMouseOver={displayNameTag} onMouseLeave={hideNameTag}><p className={\"nameTag \"+(nameTag[5]===\"on\"?\"\":\"invisible\")}>Leonora</p></div>\n  <div id={rooms[5]} className={max} onClick={submitRoom} onMouseOver={displayNameTag} onMouseLeave={hideNameTag}><p className={\"nameTag \"+(nameTag[6]===\"on\"?\"\":\"invisible\")}>max</p></div>\n  <div id ={rooms[6]} className={andre} onClick={submitRoom} onMouseOver={displayNameTag} onMouseLeave={hideNameTag}><p className={\"nameTag \"+(nameTag[7]===\"on\"?\"\":\"invisible\")}>Andre M</p></div>\n  <div id ={rooms[7]} className={marcel} onClick={submitRoom} onMouseOver={displayNameTag} onMouseLeave={hideNameTag}><p className={\"nameTag \"+(nameTag[8]===\"on\"?\"\":\"invisible\")}>Marcel</p></div>\n\n\n{/* the curtain and the name block */}\n  <div className=\"exterior\">\n    <div className={\"leftCurtain \"+( curtain===\"on\"? \"leftcurtainOn\":\"\")}></div>\n    <div className={\"rightCurtain \"+ (curtain===\"on\"? \"rightCurtainOn\":\"\")}></div>\n\n  </div>\n\n  {/* this is the room */}\n  <div className=\"interior \">\n\n<div className={curtain===\"on\"?hostGhost:\"invisible\"}></div> \n \n\n\n\n\n \n      <div className={\"title \"+(interior===\"on\"?\"titleAnimate\": \"invisible\")}>\n      <div className={interior===\"on\"?\"titleText\":\"invisible\"}>welcome {userName}</div>\n      <div className={interior===\"on\"?\"titleText\":\"invisible\"}><h1>let's play Exquisite Corpse!</h1></div>\n      <div className={interior===\"on\"?\"titleText\":\"invisible\"}>current player : {currentPlayer}</div>\n        {/* the game sentence display would go here */}\n      </div>\n    <div className={\"table \"+ (interior===\"on\"? \"tableAnimate\" : \"invisible\")}>\n    <div className={interior===\"on\"?\"titleText\":\"invisible\"}>\n    <div className=\"display \">{currentdisplay}</div>\n    <div className = {turn===\"on\"? \"invisible\":\"\"}>please wait your turn</div>\n    {/* <div className = {turn===\"on\"? \"\":\"invisible\"}>please enter the opposite sentence</div> */}\n\n\n      {/* this is the input div for the sentence, will only be visible when turn is on */}\n      <input  className = {\"sentenceInput \"+(turn===\"on\"?\"\": \"invisible\")} onChange={TypeSentence} type=\"text\" placeholder=\"write your sentence please\"></input>\n      <button className={\"submitbutton \"+(turn===\"on\"?\"\": \"invisible\")} onClick={submitSentence}>broadcast Sentence</button>\n      {/* this is the button to skip to the next player */}\n      <button className=\"turnButtom gameButton\" onClick={nextPlayer}>next player</button>\n      <button className=\"gameButton\"><a href={\"data:text/plain;charset=utf-8, \"+ allsentences .join(\"\\n\")} download=\"poem.txt\">download story</a></button>\n      <button className=\"openRulesButton gameButton\" onClick={openRules}>see Rules</button>\n\n      </div>\n    </div>\n\n</div>\n    {/* this is the window for chatting with either players or ghosts of the surrealists  */}\n    <div className={\"sidenavchat \"+(interior===\"on\"?\"visible \":\"invisible \")+(chat===\"on\"?\"largeChat\":\"\")}> \n      <div   className={\"chatWindow \"+(chat===\"on\"?\"visible\":\"invisible\")}>\n          {!messages.length ? (\n                <h1 className=\"chat-title\">Speak</h1>\n                 ) : (\n                 <div  ref= {chatwindowRef} className={\"messageBox \"+(chat===\"on\"?\"onChatbox\":\"\")}> \n                  {messages.map(({ user, date, text }, index) => (\n                    <div\n                      key={index}\n                    \n                      className={user === userName ? \"toLeft\" : \"toRight\"}\n                    >\n                      {user}: {text}{\" \"}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n       <div>\n         {/* the window to type in message */}\n            <input className={\"chatBox \"+(chat===\"on\"?\"visible\":\"invisible\")}\n              type=\"text\"\n              placeholder=\"message\"\n              value={message}\n              onChange={(event) => setMessage(event.currentTarget.value)}\n            />\n            <button className={\"chatbtn \"+(chat===\"on\"?\"\":\"invisible\")} onClick={handleMessageOut}>speak</button>\n            <button className={\"chatbtn \"+(chat===\"on\"?\"\":\"invisible\")} onClick={handleMessageOut} onClick={handleMessagetoGhostOut}>speak with ghost</button>\n            <button className={\"chatbtn \"+(chat===\"on\"?\"\":\"invisible\")} onClick={closeChat}>close chat</button>\n            <button className={\"chatbtn \"+(chat===\"on\"?\"invisible\":\"\")} onClick={openChat}>open chat</button>\n\n            \n             <div className=\"roster \">\n               {/* the roster with ghost  */}\n              <h3>players in the room</h3>\n                <ul id=\"users\">\n                \n                {users.map(({ name, id }) => (\n                  <li key={id} className={(chat===\"on\"?\"centeredLi\":\"\")}>{name}</li>\n                ))}\n              </ul>\n          </div> \n        </div>\n  </div>\n</div>  \n);\n}\n\nexport default Chat;\n ","import React from 'react';\nimport logo from './logo.svg';\nimport Chat from \"./components/Chat\"\nimport './App.css';\n\nfunction App() {\n  return (\n  <Chat/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}